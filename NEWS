TODO
====

Need to add warnings informing what has happened, when a given combination of operands is
rejected, and add a table to the User Guide summarizing the valid and invalid operations.

I need to add a specialized print function for spectra, and add a global option to limit
the length of the output. In addition, I should remove the use of invisible() as it seems
to be surprising and confusing.

photobiology 0.4.10
===================

The code for the operators has been rewritten almost from scratch. The code for the special
functions has been edited. In addition to cleaner and more compact code, now the order of
the operators does no longer affect the dispatch of the operators for spectral objects.
There are some changes in which combinations of arguments are accepted. The checking is
now more strict with respect to what may make sense from the point of view of the physics
behind the calculations. Failed checks return NA.

All calls to invisible(), except in the \texttt{set\_\_\_Spct} functions, have been replaced
with return() as the lack of visible output was confusing. It is now docummented in the
User Guide how to use options() to control the length of the print output.

photobiology 0.4.9
===================

Generic functions e_response() and q_response() added, and debugged.
Changed check() for source.spct and response.spct so that it does not add "energy" or "photon" based spectral data
on building objects, as this adds unneeded computation and complicates the logic by changing the
data on copy operations (which is surprising and can lead to difficult-to-trace bugs.)
This change can be NOT BACKWARDS compatible in some cases of user code, but should be fine for
other functions defined in the photobiology packages, as they have been edited to maintain the
same visible behavior.

Fixed a spurious warning by trim_spct() due to minute differences in wavelengths.

photobiology 0.4.8
===================

Tweaked handling of w.high by new_waveband().
Fixed bug in function waveband() which caused it not to properly create weighted wavebands.
Improved handling of names by split_wavebands() and improved the documentation.

photobiology 0.4.7
===================

Added function is.waveband().

photobiology 0.4.6
===================

Fixed various small bugs. Removed rbindlist(), for spectra rbindspct() should be used instead.

photobiology 0.4.5
===================

Added waveband() constructor function.
Fixed bug in reflectance_spct() and reflectance() functions.
Fixed bug in class.spct().
Revised the user guide to reflect all changes to the code done in the last few versions.

photobiology 0.4.4
===================

Added the remaining as.xxxx.spct() functions.
Added object creation functions source.spct(), filter.spct() and reflector.spct().
Cleaned code to avoid some warnings.

photobiology 0.4.3
===================

Fixed bug in functions transmittance_spct() and reflectance_spct(), and added aliases transmittance() and reflectance().

photobiology 0.4.2
===================

New function rmDerivedSpct() now used internally for setting xxx.spct classes consistently by removing derived class attributes when class is set to parent class.

New as.generic.spct() and as.private.spct() functions for spct objects to easy use of operators.

Bug in default arguments to rbindspct() fixed.

photobiology 0.4.01
===================

Fixed a troublesome bug caused by a couple of missing exports. MayaCalc was broken because of this.

Moved functions D2_spectrum() and FEL_spectrum() to this package from photobiologyLamps

photobiology 0.4.00
===================

Started new development branch.
Added is.xxx.spct() functions for all classes defined and is.any.spct() and class.spct() functions to query class of spectral objects.

photobiology 0.3.16
===================

Edited wb2xx functions. Added other required variables and set their values to zero, so that the generic.spct objects returned by the waveband to spectra functions can be safely converted to any of the specialized spct spectral objects. This makes then labeling of all types of spectral plots equally easy.

photobiology 0.3.15
===================

Never released, changes reversed.

photobiology 0.3.14
===================

The required component of response.spct objects was renamed from 'response' to 's.e.response'. 'response' is also accepted and renamed into 's.e.response'. If 's.q.response' is present it is accepted and maintained. New methods e2q() and q2e() for response.spct class.

photobiology 0.3.13
===================

Replaced several 'return' statements with 'invisible'.
Replaced all remaining data.frame() calls with data.table().

photobiology 0.3.12
===================

Changed the name of two of the variables added by wb2rect_spct() to more meaningful ones.

photobiology 0.3.11
===================

Added setGenericSpct() as a synonym for setGenSpct() to keep naming consistent. Added functions wb2tagged_spct() and wb2rect_spct() for creating a tagged generic.spct objects suitable from a list of wavebands.

photobiology 0.3.10
===================

Updated vignette to use new package photobiologyWavebands.
Added a generic function tag() and methods for generic.spct and source.spct objects. tag() can be used to 'tag' the rows based on a list of wavebands, or simply with rgb color equivalents. A color() method for source.spct() was added, which returns the overall colour of the spectrum as a whole. Fixed a 'bug' in tag() that increased execution speed a lot. Added CIE2008 human luminous efficiency function data. Added functions irrad(), q_irrad() and e_irrad() as synonyms for irrad_spct(), q_irrad_spct() and e_irrad_spct(). Added functions irrad(), q_ratio(), e_ratio(), eq_ratio(), and qe_ratio() as synonyms for q_ratio_spct(), e_ratio_spct(), eq_ratio_spct() and qe_ratio_spct(). eq_ratio_spct() is also a new function. Added function split_bands() for creating lists of unweighted wavebands. Several bug fixes, and new function put_hinges(). Added function rbindspct() and redefined rbindlist() (hiding data.table::rbindlist() by exporting photobiology::rbindlist() instead.) Also some changes to color() with new methods for numeric and lists.

photobiology 0.3.9
===================

Added summary() and corresponding print() methods for spectral objects, and stepsize() default and "generic.spct" methods. Changed SetSourceSpct() to accept a "time.unit" argument, which is used to set an attribute in "source.spct" objects (defaults to "second" making it transparently backwards compatible).

Performance tests show that with default settings the irradiance functions for "source.spct" objects execute significantly faster than the vector based ones. Operators for spectra are at the moment relatively very slow.

photobiology 0.3.8
===================

Now chromaticity and colour matching function data are as chroma.spct objects. This required also edits to many of the colour related functions. Added CMF for honeybees and example daily solar spectral data. Edited irrad_spct() so that results always include waveband names.

photobiology 0.3.7
===================

Added new class response.spct and revised the operators' definitions.

photobiology 0.3.6
===================

The set...Spct() functions until 0.3.5 had different semantics than setDT in data.table. This has now been fixed.
Data for CIE D65 illuminant has been added. The imports and re-exports from data.table now include additional functions including some new to data.table 1.9.3.
Added new class chroma.spct for storing x y z chromaticy data and the corresponding functions setChromaSpct and operators * and /.

photobiology 0.3.5
===================

Fixed "bug"" in trim_spct(), which was returning data.table objects instead of objects of the same type as supplied as argument. A bug in version 1.9.2 of data.table was behind some other problems, so added requirement for data.table 1.9.3+ to DESCRIPTION.

photobiology 0.3.4
===================

Added a class for reflectance spectra and updated operator definitions. Added function setReflectorSpct().
New functions interpolate_spct(), reflectance_spct(), transmittance_spct(), q_ratio_spct(), e_ratio_spct(), qe_ratio_spct(), rgb_spct() and check(), check.generic.spct(), check.filter.spct(), check.reflector.spct(), and check.source.spct(). Operator *.generic.spct now accepts wavebands as second argument.
Debugged min(), max(), range(), midpoint(), spread(), labels() for spectra.
Updated setGenericSpct(), setFilterSpct() and setSourceSpct() to use check() to check and fix if possible missing variable, or add the missing variables as a vector of NAs.

Updated the vignette with examples of the use of spct objects and the functions and operators defined for them.
Modified packages so as to consistently use .spct as the name tag of all objects representing spectra. Recently .dt was used and earlier, .data, that is still a fall-back in the current version.

TODO: make sure all spct functions and operators work correctly when the argument spct objects are incomplete.

photobiology 0.3.3
===================

New functions insert_spct_hinges(), trim_spct(), integrate_spct(), average_spct(), irrad_spct(), e_irrad_spct(), q_irrad_scpt(), transmittance_spct(), reflectance_spct(), ... , is_effective.waveband(),
Small edits to new_waveband()
Example solar spectrum  data now available as "source.spct" objects and as "data.table" and "data.frame" so as not to break any old code.

photobiology 0.3.2
===================

Function day_night had bugs, now fixed.

photobiology 0.3.1
===================

Added functions sun_angles and day_night.

photobiology 0.3.0
===================
************ MAJOR UPDATE ****************
There are some backward incompatibilities

Saved wavebands will give an error, but any
code used to create them should still work
unchanged.

If you used the parameter use.cpp.code in
your code, you will just need to delete
the corresponding arguments. C++ code is
always used.

I hope I haven't broken anything else but
I have made quite major internal changes.

At the moment the code is a bit slower than
before. I will most likely be able to cure
this at a later stage.
******************************************

The package now depends on data.table which is now imported. As MayaCalc already returns data.table objects, hopefully this will help optimize performance and memory use. Users should be aware that data.tables are copied by reference, and a true copy is needed, function copy should be used.

I am making the code more object (S3) oriented. Three new classes are exported "filter.spct", "source.spct", and "generic.spct", and three new functions were added to set the class of objects to these classes. If the object is not already a data.table, it is setDT. This allows me to create a more user-friendly interface by overloading operators. Now the four basic operations work on spectra, and one can also use these same operations and ^between a spectrum a numerical vector of length one or longer. Many math functions and some summary functions have specialized versions for spectra. This is my attempt to make calculations intuitive, but do not expect them to be fast.

Added generic functions A2T and T2A for converting absorbance to transmittance and back. The generic function takes a numerical argument, and there are special versions for spectra. When the argument is a "filter.spc" object they return a copy of the original object with the calculated quantity added. If the requested output already exists, it is NOT recalculated, just a copy of the argument is returned, if the input data is missing, the corresponding output is set to NA.

Added a label field to waveband object to store an optional label for plotting, which by default is set equal to the name of the waveband. labels.waveband was changed to return in field label this label instead of the name, and the name is returned in the field name. Also added a new function normalization.waveband that returns the normalization wavelength.

calc_filter_multipliers now accepts both a filter name as a character string or an object of class "filter.spct" as argument to parameter filter (which was renamed from filter.name). In addition the function acquired a pc.in logical parameter, an the pc parameter was renamed pc.out. This allows any combination of input and output as percentages or fractions.

photobiology 0.2.25
===================

Modified calc_filter_multipliers to work with photobiologyFilters 0.1.8 and later
Both calc_filter_multipliers and calc_source_multipliers now find by name both objects with ending .dt and .data. If both exist .dt is used.

photobiology 0.2.24
===================

Added functions oper_spectra, prod_spectra, div_spectra, and subt_spectra, and redefined sum_spectra based on oper_spectra. Behaviour of sum_spectra has not changed.

photobiology 0.2.23
===================

Removed center_wl center_wl.generic and center_wl.waveband
Added spread spread.generic and spread.waveband
Added midpoint midpoint.generic and midpoint.waveband

photobiology 0.2.22
===================

Moved from photobiologyLamps and renamed function calc_lamp_output() to calc_source_output().
Moved from photobiologyLamps calc_filter_multipliers().
Added two examples of how to draw Maxwell's triangles.

photobiology 0.2.21
===================

Fixed a bug in s.e.irrad2rgb() caused by not explicitly handling the case when the wavelength range was completely outside outside the range of the the CMF or CC data. In other words the function crashed when the colour of invisible radiation was requested. Now "black" is returned in this case.

photobiology 0.2.20
===================

New function w_length_range2rgb(), which takes a range of wavelengths, and returns the equivalent RGB colour assuming equal spectral (energy) irradiance at all wave lengths within the range.
Modified the calculation of color for wavebands, uisng this new function.

photobiology 0.2.19
===================

Added waveband versions of generic functions, min(), max(), range() and labels().
Updated trim_tails() so that it can also expand a spectrum.
New functions:
w_length2rgb() to calculate RGB colour definitions for monochormatic light.
s.e.irrad2rgb() to calculate RGB colour definition from spectral irradiance data or reflectance data.
Data on x, y, z coordinates for CIE chromaticity coordinates and colour matching functions added.

photobiology 0.2.18
===================

Fixed a bug in split_irradiance() and improved handling of cut point values outside the data range, unsorted cut-points, and redundant cut-points. For 'good' data there are no changes in output, except in the case when three cut points were supplied, as the third one was being ignored. The handling of out-of-range cut points has been changed so that the endpoints are moved to the extreme wavelengths of the data.

photobiology 0.2.17
===================

The cache is now created in the "emptyenv". This solves a long-standing error message during installation.

photobiology 0.2.16
===================
Changed irradiance() so that it optionally accepts a list of wave_bands and returns a vector or irradiances. The returned values have a names attribute set to the names of the elements in the wave_band list. If the names are missing, it returns the "name"s stored in the wave_band objects.

wave_band objects are now S3 objects with class "waveband", a print.waveband() function was added, which is called whenever the generic print function is called on a "waveband" object.

New convenience functions split_irradiance(), split_energy_irradiance() and split_photon_irradiance() for integrating unweighted irradiances for a series of contiguous wavelength ranges.

photobiology 0.2.15
===================
Updated NAMESPACE to fix error caused by changes in Rcpp or R.

photobiology 0.2.14
===================
Updated User Guide. Modified interpolate_spectrum so that it uses cubic spline interpolation when the number of data points is small, and linear interpolation otherwise.

photobiology 0.2.13
===================
Moved peaks-related functions to new package photobiologygg and removed dependence on splus2R.

photobiology 0.2.12
===================
Added new functions find_peaks and get_peaks, which are wrappers built on top of function peaks from package splus2R, which becomes a new dependency.

photobiology 0.2.11
===================
Added Rcpp version of insert_hinges() using the much faster binary search algorithm.

photobiology 0.2.10
===================
Small, backward compatible change to trim_tails: added fill parameter. If NULL (default) the function works as earlier deleting the tails. If another value is passed as fill, the s.irrad values in the tails are replaced with this value.

photobiology 0.2.9
==================
Added two new functions: interpolate_spectrum() and sum_spectra()

photobiology 0.2.7 + 0.2.8
==========================
The vignette "Examples" was moved to a separate package because it used a very large data set. An "benign"" error in new_waveband() was fixed (this has no effect on calculations). The data set sun.data was updated to contain instantaneous data, and its documentation updated to better describe the data.

photobiology 0.2.6
==================

A vignette "Examples" was added. Other examples will be added later on. No changes to R or C++ code.

photobiology 0.2.5
==================

A vignette "Manual" was added. No changes to R or C++ code.

photobiology 0.2.4
==================

As profiling showed that calls to insert_hinges() and within this function to which() were using most of run time of the functions, a new parameter was added to functions so that the use of hinges can be switched on and off. The default is to use hinges for interpolation only if the wavelength resolution of the spectrum is worse than 1.0 nm. This causes only small errors in the results of calculations (< 1%) but reduces run time very significantly. The defaults should work just fine in most cases, in which case there is no need to do any changes to user code. In addition new_waveband() was modified so that if no SWF is used, then hinges are not included in the waveband defined.

photobiology 0.2.2-0.2.3
========================

Revised photon_ratio() to use same optimizations.

Improved implementation of cache. Now it is enclosed in an environment that is created when the package is loaded and removed when it is unloaded.


photobiology 0.2.1
==================

Factored to a separate function the code to check spectral data, and added argument to irradiance to switch off the checking.

Added a "name" field to wavebands and a wb.name argument to new_waveband(), with a default so that no old code will be broken.

Added argument to calc_multipliers() to enable caching. Disabled by default.

Added argument to irradiance() to enable/disable checking of spectral data. Enabled by default.

Added argument to irradiance() to enable use of speed optimizations.

Defaults to arguments ensure that nothing changes from earlier versions unless new features are explicitly enabled.

photobiology 0.2.0
==================

Reimplemented irradiance(), calc_multipliers, e2qmol_multipliers(), and added e2quantum_multipliers().
Also reimplemented new_waveband(), changing its interface. Some changes in other photobiologyxxxx will be needed.
