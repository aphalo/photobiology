photobiology 0.3.0
===================
************ MAJOR UPDATE ****************
There are some backward incompatibilities

Saved wavebands will give an error, but any
code used to create them should still work
unchanged.

If you used the parameter use.cpp.code in
your code, you will just need to delete
the corresponding arguments. C++ code is
always used.

I hope I haven't broken anything else but
I have made quite major internal changes.

At the moment the code is a bit slower than
before. I will most likely be able to cure
this at a later stage.
******************************************

The package now depends on data.table which is now imported. As MayaCalc already returns data.table objects, hopefully this will help optimize performance and memory use. Users should be aware that data.tables are copied by reference, and a true copy is needed, function copy should be used.

I am making the code more object (S3) oriented. Three new classes are exported "filter.spct", "source.spct", and "generic.spct", and three new functions were added to set the class of objects to these classes. If the object is not already a data.table, it is setDT. This allows me to create a more user-friendly interface by overlaoding operators. Now the four basic operations work on spectra, and one can also use these same operations between a spectrum a numerical vector of legnth one or longer. This is my attempt to make calcualtions intuitive, but do not expect them to be fast.

Added a label field to waveband object to store an optional label for plotting, which by default is set equal to the name of the waveband. labels.waveband was changed to return in field label this label instead of the name, and the name is returned in the field name. Also added a new function normalization.waveband that returns the normalization wavelength.

calc_filter_multipliers now accepts both a filter name as a character string or an object of class "filter.spct" as argument to parameter filter (which was renamed from filter.name). In addition the function acquired a pc.in logical parameter, an the pc parameter was renamed pc.out. This allows any combination of input and output as percentages or fractions. 

photobiology 0.2.25
===================

Modified calc_filter_multipliers to work with photobiologyFilters 0.1.8 and later
Both calc_filter_multipliers and calc_source_multipliers now find by name both objects with ending .dt and .data. If both exist .dt is used.

photobiology 0.2.24
===================

Added functions oper_spectra, prod_spectra, div_spectra, and subt_spectra, and redefined sum_spectra based on oper_spectra. Behaviour of sum_spectra has not changed.

photobiology 0.2.23
===================

Removed center_wl center_wl.generic and center_wl.waveband
Added spread spread.generic and spread.waveband
Added midpoint midpoint.generic and midpoint.waveband

photobiology 0.2.22
===================

Moved from photobiologyLamps and renamed function calc_lamp_output() to calc_source_output().
Moved from photobiologyLamps calc_filter_multipliers().
Added two examples of how to draw Maxwell's triangles.

photobiology 0.2.21
===================

Fixed a bug in s.e.irrad2rgb() caused by not explicitly handling the case when the wavelength range was completely outside outside the range of the the CMF or CC data. In other words the function crashed when the colour of invisible radiation was requested. Now "black" is returned in this case.

photobiology 0.2.20
===================

New function w_length_range2rgb(), which takes a range of wavelengths, and returns the equivalent RGB colour assuming equal spectral (energy) irradiance at all wave lengths within the range.
Modified the calculation of color for wavebands, uisng this new function. 

photobiology 0.2.19
===================

Added waveband versions of generic functions, min(), max(), range() and labels().
Updated trim_tails() so that it can also expand a spectrum.
New functions:
w_length2rgb() to calculate RGB colour definitions for monochormatic light.
s.e.irrad2rgb() to calculate RGB colour definition from spectral irradiance data or reflectance data.
Data on x, y, z coordinates for CIE chromaticity coordinates and colour matching functions added.

photobiology 0.2.18
===================

Fixed a bug in split_irradiance() and improved handling of cut point values outside the data range, unsorted cut-points, and redundant cut-points. For 'good' data there are no changes in output, except in the case when three cut points were supplied, as the third one was being ignored. The handling of out-of-range cut points has been changed so that the endpoints are moved to the extreme wavelengths of the data. 

photobiology 0.2.17
===================

The cache is now created in the "emptyenv". This solves a long-standing error message during installation. 

photobiology 0.2.16
===================
Changed irradiance() so that it optionally accepts a list of wave_bands and returns a vector or irradiances. The returned values have a names attribute set to the names of the elements in the wave_band list. If the names are missing, it returns the "name"s stored in the wave_band objects.

wave_band objects are now S3 objects with class "waveband", a print.waveband() function was added, which is called whenever the generic print function is called on a "waveband" object.

New convenience functions split_irradiance(), split_energy_irradiance() and split_photon_irradiance() for integrating unweighted irradiances for a series of contiguous wavelength ranges. 

photobiology 0.2.15
===================
Updated NAMESPACE to fix error caused by changes in Rcpp or R.

photobiology 0.2.14
===================
Updated User Guide. Modified interpolate_spectrum so that it uses cubic spline interpolation when the number of data points is small, and linear interpolation otherwise.

photobiology 0.2.13
===================
Moved peaks-related functions to new package photobiologygg and removed dependence on splus2R.

photobiology 0.2.12
===================
Added new functions find_peaks and get_peaks, which are wrappers built on top of function peaks from package splus2R, which becomes a new dependency.

photobiology 0.2.11
===================
Added Rcpp version of insert_hinges() using the much faster binary search algorithm.

photobiology 0.2.10
===================
Small, backward compatible change to trim_tails: added fill parameter. If NULL (default) the function works as earlier deleting the tails. If another value is passed as fill, the s.irrad values in the tails are replaced with this value.

photobiology 0.2.9
==================
Added two new functions: interpolate_spectrum() and sum_spectra()

photobiology 0.2.7 + 0.2.8
==========================
The vignette "Examples" was moved to a separate package because it used a very large data set. An "benign"" error in new_waveband() was fixed (this has no effect on calculations). The data set sun.data was updated to contain instantaneous data, and its documentation updated to better describe the data.

photobiology 0.2.6
==================

A vignette "Examples" was added. Other examples will be added later on. No changes to R or C++ code.

photobiology 0.2.5
==================

A vignette "Manual" was added. No changes to R or C++ code.

photobiology 0.2.4
==================

As profiling showed that calls to insert_hinges() and within this function to which() were using most of run time of the functions, a new parameter was added to functions so that the use of hinges can be switched on and off. The default is to use hinges for interpolation only if the wavelength resolution of the spectrum is worse than 1.0 nm. This causes only small errors in the results of calculations (< 1%) but reduces run time very significantly. The defaults should work just fine in most cases, in which case there is no need to do any changes to user code. In addition new_waveband() was modified so that if no SWF is used, then hinges are not included in the waveband defined.

photobiology 0.2.2-0.2.3
========================

Revised photon_ratio() to use same optimizations.

Improved implementation of cache. Now it is enclosed in an environment that is created when the package is loaded and removed when it is unloaded.


photobiology 0.2.1
==================

Factored to a separate function the code to check spectral data, and added argument to irradiance to switch off the checking.

Added a "name" field to wavebands and a wb.name argument to new_waveband(), with a default so that no old code will be broken.

Added argument to calc_multipliers() to enable caching. Disabled by default.

Added argument to irradiance() to enable/disable checking of spectral data. Enabled by default.

Added argument to irradiance() to enable use of speed optimizations.

Defaults to arguments ensure that nothing changes from earlier versions unless new features are explicitly enabled.

photobiology 0.2.0
==================

Reimplemented irradiance(), calc_multipliers, e2qmol_multipliers(), and added e2quantum_multipliers().
Also reimplemented new_waveband(), changing its interface. Some changes in other photobiologyxxxx will be needed.
