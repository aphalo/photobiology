% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spct.classes.r
\name{setSoluteProperties}
\alias{setSoluteProperties}
\alias{solute_properties<-}
\title{Set the "solute.properties" attribute}
\usage{
setSoluteProperties(
  x,
  solute.properties = NULL,
  pass.null = FALSE,
  mass = NA_real_,
  formula = NULL,
  structure = grDevices::as.raster(matrix()),
  name = NA_character_,
  ID = NA_character_
)

solute_properties(x) <- value
}
\arguments{
\item{x}{solute_spct A spectrum of coefficients of attenuation.}

\item{solute.properties, value}{a list with fields named \code{"mass"}, \code{"formula"},
\code{"structure"}, \code{"name"} and \code{"ID"}.}

\item{pass.null}{logical If \code{TRUE}, the parameters to the next three
parameters will be always ignored, otherwise they will be used to
build an object of class \code{"solute.properties"} when the argument to
\code{solute.properties} is \code{NULL}.}

\item{mass}{numeric The mass in Dalton (Da = g/mol).}

\item{formula}{character The molecular formula.}

\item{structure}{raster A bitmap of the structure.}

\item{name}{character The name of the substance. A named character
vector, with member names such as "IUPAC" for the authority.}

\item{ID}{character The name of the substance. A named character
vector, with member names such as "ChemSpider" or "PubChen" for the
authority.}
}
\value{
\code{x}
}
\description{
Function to set by reference the \code{"solute.properties"} attribute of an existing
\code{solute_spct} object.
}
\details{
Storing solute properties allows inter-conversion between bases
  of expression, and ensures the unambiguous identification of the substances
  to which the spectral data refer. The parameter \code{pass.null} makes
  it possible to remove the attribute.
}
\note{
This function alters \code{x} itself by reference and in addition
  returns \code{x} invisibly. If \code{x} is not a filter_spct object,
  \code{x} is not modified.
}
\examples{

solute.properties <-
  list(formula = c(text = "H2O", html = "H<sub>2</sub>", TeX = "$H_2O$"),
       name = c("water", IUPAC = "oxidane"),
       structure = grDevices::as.raster(matrix()),
       mass = 18.015, # Da
       ID = c(ChemSpider = "917", CID = "962"))
my.spct <- solute_spct()
solute_properties(my.spct) <- solute.properties
solute_properties(my.spct)
solute_properties(my.spct) <- NULL
solute_properties(my.spct)
solute_properties(my.spct, return.null = TRUE)
solute_properties(my.spct)

}
\seealso{
Other measurement metadata functions: 
\code{\link{add_attr2tb}()},
\code{\link{getFilterProperties}()},
\code{\link{getHowMeasured}()},
\code{\link{getInstrDesc}()},
\code{\link{getInstrSettings}()},
\code{\link{getSoluteProperties}()},
\code{\link{getWhatMeasured}()},
\code{\link{getWhenMeasured}()},
\code{\link{getWhereMeasured}()},
\code{\link{get_attributes}()},
\code{\link{isValidInstrDesc}()},
\code{\link{isValidInstrSettings}()},
\code{\link{select_spct_attributes}()},
\code{\link{setFilterProperties}()},
\code{\link{setHowMeasured}()},
\code{\link{setInstrDesc}()},
\code{\link{setInstrSettings}()},
\code{\link{setWhatMeasured}()},
\code{\link{setWhenMeasured}()},
\code{\link{setWhereMeasured}()},
\code{\link{spct_attr2tb}()},
\code{\link{spct_metadata}()},
\code{\link{trimInstrDesc}()},
\code{\link{trimInstrSettings}()}
}
\concept{measurement metadata functions}
