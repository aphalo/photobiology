% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spct.ratios.R
\name{eq_ratio}
\alias{eq_ratio}
\alias{eq_ratio.default}
\alias{eq_ratio.source_spct}
\alias{eq_ratio.source_mspct}
\title{Energy:photon ratio}
\usage{
eq_ratio(spct, w.band, scale.factor, wb.trim, use.cached.mult, use.hinges, ...)

\method{eq_ratio}{default}(spct, w.band, scale.factor, wb.trim, use.cached.mult, use.hinges, ...)

\method{eq_ratio}{source_spct}(
  spct,
  w.band = NULL,
  scale.factor = 1,
  wb.trim = getOption("photobiology.waveband.trim", default = TRUE),
  use.cached.mult = FALSE,
  use.hinges = NULL,
  naming = "short",
  name.tag = ifelse(naming != "none", "[e:q]", ""),
  ...
)

\method{eq_ratio}{source_mspct}(
  spct,
  w.band = NULL,
  scale.factor = 1,
  wb.trim = getOption("photobiology.waveband.trim", default = TRUE),
  use.cached.mult = FALSE,
  use.hinges = NULL,
  naming = "short",
  name.tag = ifelse(naming != "none", "[e:q]", ""),
  ...,
  attr2tb = NULL,
  idx = "spct.idx",
  .parallel = FALSE,
  .paropts = NULL
)
}
\arguments{
\item{spct}{source_spct.}

\item{w.band}{waveband or list of waveband objects.}

\item{scale.factor}{numeric vector of length 1, or length equal to that of
\code{w.band}. Numeric multiplier applied to returned values.}

\item{wb.trim}{logical if TRUE wavebands crossing spectral data boundaries
are trimmed, if FALSE, they are discarded.}

\item{use.cached.mult}{logical Flag telling whether multiplier values should
be cached between calls.}

\item{use.hinges}{logical Flag indicating whether to insert "hinges" into the
spectral data before integration so as to reduce interpolation errors at
the boundaries of the wavebands.}

\item{...}{other arguments (possibly used by derived methods).}

\item{naming}{character one of "long", "default", "short" or "none". Used to
select the type of names to assign to returned value.}

\item{name.tag}{character Used to tag the name of the returned values.}

\item{attr2tb}{character vector, see \code{\link{add_attr2tb}} for the syntax
for \code{attr2tb} passed as is to formal parameter \code{col.names}.}

\item{idx}{character Name of the column with the names of the members of the
collection of spectra.}

\item{.parallel}{if TRUE, apply function in parallel, using parallel backend
provided by foreach}

\item{.paropts}{a list of additional options passed into the foreach function
when parallel computation is enabled. This is important if (for example)
your code relies on external data or packages: use the .export and
.packages arguments to supply them so that all cluster nodes have the
correct environment set up for computing.}
}
\value{
Computed values are ratios between energy irradiance and photon
  irradiance for a given waveband. A named \code{numeric} vector in the case
  of methods for individual spectra, with one value for each \code{waveband}
  passed to parameter \code{w.band}. A \code{data.frame} in the case of
  collections of spectra, containing one column for each \code{waveband}
  object, an index column with the names of the spectra, and optionally
  additional columns with metadata values retrieved from the attributes of
  the member spectra.

  By default values are only integrated, but depending on the argument passed
  to parameter \code{quantity} they can be re-expressed as relative fractions
  or percentages. In the case of vector output, \code{names} attribute is set
  to the name of the corresponding waveband unless a named list is supplied
  in which case the names of the list members are used, with "e:q" prepended.
  Units [J mol-1].
}
\description{
This function returns the energy to mole of photons ratio for each waveband and a
light source spectrum.
}
\section{Methods (by class)}{
\itemize{
\item \code{eq_ratio(default)}: Default for generic function

\item \code{eq_ratio(source_spct)}: Method for \code{source_spct} objects

\item \code{eq_ratio(source_mspct)}: Calculates energy:photon from a \code{source_mspct}
object.

}}
\note{
The last two parameters control speed optimizations. The defaults
  should be suitable in most cases. If you will use repeatedly the same SWFs
  on many spectra measured at exactly the same wavelengths you may obtain
  some speed up by setting \code{use.cached.mult=TRUE}. However, be aware
  that you are responsible for ensuring that the wavelengths are the same in
  each call, as the only test done is for the length of the \code{w.length}
  vector.
}
\examples{
eq_ratio(sun.spct, new_waveband(400,700))

}
\seealso{
Other photon and energy ratio functions: 
\code{\link{e_ratio}()},
\code{\link{q_ratio}()},
\code{\link{qe_ratio}()}
}
\concept{photon and energy ratio functions}
