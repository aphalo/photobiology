% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spct.peaks.r
\name{peaks}
\alias{peaks}
\alias{peaks.default}
\alias{peaks.numeric}
\alias{peaks.data.frame}
\alias{peaks.generic_spct}
\alias{peaks.source_spct}
\alias{peaks.response_spct}
\alias{peaks.filter_spct}
\alias{peaks.reflector_spct}
\alias{peaks.solute_spct}
\alias{peaks.cps_spct}
\alias{peaks.raw_spct}
\alias{peaks.generic_mspct}
\alias{peaks.source_mspct}
\alias{peaks.response_mspct}
\alias{peaks.filter_mspct}
\alias{peaks.reflector_mspct}
\alias{peaks.solute_mspct}
\alias{peaks.cps_mspct}
\alias{peaks.raw_mspct}
\title{Peaks or local maxima}
\usage{
peaks(
  x,
  span,
  global.threshold,
  local.threshold,
  local.reference,
  threshold.range,
  strict,
  na.rm,
  ...
)

\method{peaks}{default}(
  x,
  span = NA,
  global.threshold = NA,
  local.threshold = NA,
  local.reference = NA,
  threshold.range = NA,
  strict = NA,
  na.rm = FALSE,
  ...
)

\method{peaks}{numeric}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  ...
)

\method{peaks}{data.frame}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  x.var.name = NULL,
  y.var.name = NULL,
  var.name = y.var.name,
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{generic_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = NULL,
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{source_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  unit.out = getOption("photobiology.radiation.unit", default = "energy"),
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{response_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  unit.out = getOption("photobiology.radiation.unit", default = "energy"),
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{filter_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  filter.qty = getOption("photobiology.filter.qty", default = "transmittance"),
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{reflector_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{solute_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{cps_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = "cps",
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{raw_spct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = "counts",
  refine.wl = FALSE,
  method = "spline",
  ...
)

\method{peaks}{generic_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = NULL,
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{source_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  unit.out = getOption("photobiology.radiation.unit", default = "energy"),
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{response_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  unit.out = getOption("photobiology.radiation.unit", default = "energy"),
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{filter_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  filter.qty = getOption("photobiology.filter.qty", default = "transmittance"),
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{reflector_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{solute_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{cps_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = "cps",
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)

\method{peaks}{raw_mspct}(
  x,
  span = 5,
  global.threshold = 0,
  local.threshold = 0,
  local.reference = "minimum",
  threshold.range = NULL,
  strict = TRUE,
  na.rm = FALSE,
  var.name = "counts",
  refine.wl = FALSE,
  method = "spline",
  ...,
  .parallel = FALSE,
  .paropts = NULL
)
}
\arguments{
\item{x}{numeric vector. Hint: to find valleys, change the sign of the
argument with the unary operator \code{-}.}

\item{span}{odd integer A peak is defined as an element in a sequence which
is greater than all other elements within a moving window of width
\code{span} centred at that element. The default value is 5, meaning that a
peak is taller than its four nearest neighbours. \code{span = NULL} extends
the span to the whole length of \code{x}.}

\item{global.threshold}{numeric A value between 0.0 and 1.0,
relative to \code{threshold.range} indicating the \emph{global} height
(depth) threshold below which peaks (valleys) will be ignored, or a
negative value, between 0.0 and -1.0 indicating the \emph{global} height
(depth) threshold above which peaks (valleys) will be ignored. If
\code{threshold.range = 0} or the value passed as argument belongs to class
\code{"AsIs"} the value is interpreted as an absolute value expressed in
data units.}

\item{local.threshold}{numeric A value between 0.0 and 1.0, relative to
\code{threshold.range}, indicating the
\emph{within-window} height (depth) threshold below which peaks (valleys)
will be ignored.  If \code{threshold.range = 0} or the value passed
as argument belongs to class \code{"AsIs"} the value is interpreted as an
absolute value expressed in data units.}

\item{local.reference}{character One of \code{"minimum"} (eqv.
\code{"maximum"}) or \code{"median"}. The reference used to assess the
height of the peak, either the minimum (maximum) value within the window or
the median of all values in the window.}

\item{threshold.range}{numeric vector of length 2 or a longer vector or list
on which a call to \code{range()} returns a numeric vector of length 2. If
\code{NULL}, the default, \code{range(x)} is used.}

\item{strict}{logical flag: if TRUE, an element must be strictly greater than
all other values in its window to be considered a peak. Default: TRUE.}

\item{na.rm}{logical indicating whether \code{NA} values should be stripped
before searching for peaks.}

\item{...}{ignored}

\item{var.name, x.var.name, y.var.name}{character Name of column where to look
for peaks.}

\item{refine.wl}{logical Flag indicating if peak location should be refined by
fitting a function.}

\item{method}{character String with the name of a method. Currently only
spline interpolation is implemented.}

\item{unit.out}{character One of "energy" or "photon"}

\item{filter.qty}{character One of "transmittance" or "absorbance"}

\item{.parallel}{if TRUE, apply function in parallel, using parallel backend
provided by foreach}

\item{.paropts}{a list of additional options passed into the foreach function
when parallel computation is enabled. This is important if (for example)
your code relies on external data or packages: use the .export and
.packages arguments to supply them so that all cluster nodes have the
correct environment set up for computing.}
}
\value{
A subset of \code{x} with rows corresponding to local maxima.
}
\description{
Function that returns a subset of an R object with observations corresponding
to local maxima.
}
\section{Methods (by class)}{
\itemize{
\item \code{peaks(default)}: Default returning always NA.

\item \code{peaks(numeric)}: Default function usable on numeric vectors.

\item \code{peaks(data.frame)}: Method for "data.frame" objects.

\item \code{peaks(generic_spct)}: Method for "generic_spct" objects.

\item \code{peaks(source_spct)}: Method for "source_spct" objects.

\item \code{peaks(response_spct)}: Method for "response_spct" objects.

\item \code{peaks(filter_spct)}: Method for "filter_spct" objects.

\item \code{peaks(reflector_spct)}: Method for "reflector_spct" objects.

\item \code{peaks(solute_spct)}: Method for "solute_spct" objects.

\item \code{peaks(cps_spct)}: Method for "cps_spct" objects.

\item \code{peaks(raw_spct)}: Method for "raw_spct" objects.

\item \code{peaks(generic_mspct)}: Method for "generic_mspct" objects.

\item \code{peaks(source_mspct)}: Method for "source_mspct" objects.

\item \code{peaks(response_mspct)}: Method for "cps_mspct" objects.

\item \code{peaks(filter_mspct)}: Method for "filter_mspct" objects.

\item \code{peaks(reflector_mspct)}: Method for "reflector_mspct" objects.

\item \code{peaks(solute_mspct)}: Method for "solute_mspct" objects.

\item \code{peaks(cps_mspct)}: Method for "cps_mspct" objects.

\item \code{peaks(raw_mspct)}: Method for "raw_mspct" objects.

}}
\note{
Thresholds for ignoring peaks are applied after peaks are searched for,
and negative threshold values can in some cases result in no peaks being
returned.
}
\examples{
peaks(sun.spct, span = 51)
peaks(sun.spct, span = NULL)
peaks(sun.spct, span = 51, refine.wl = TRUE)

peaks(sun.spct)

}
\seealso{
Other peaks and valleys functions: 
\code{\link{find_peaks}()},
\code{\link{find_spikes}()},
\code{\link{get_peaks}()},
\code{\link{replace_bad_pixs}()},
\code{\link{spikes}()},
\code{\link{valleys}()},
\code{\link{wls_at_target}()}
}
\concept{peaks and valleys functions}
