% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sun.calc.r
\name{sun_angles}
\alias{sun_angles}
\alias{sun_angles_fast}
\alias{sun_elevation}
\alias{sun_zenith_angle}
\alias{sun_azimuth}
\alias{distance_to_sun}
\title{Solar angles}
\usage{
sun_angles(
  time = lubridate::now(tzone = "UTC"),
  tz = lubridate::tz(time),
  geocode = tibble::tibble(lon = 0, lat = 51.5, address = "Greenwich"),
  use.refraction = FALSE
)

sun_angles_fast(time, tz, geocode, use.refraction)

sun_elevation(
  time = lubridate::now(),
  tz = lubridate::tz(time),
  geocode = tibble::tibble(lon = 0, lat = 51.5, address = "Greenwich"),
  use.refraction = FALSE
)

sun_zenith_angle(
  time = lubridate::now(),
  tz = lubridate::tz(time),
  geocode = tibble::tibble(lon = 0, lat = 51.5, address = "Greenwich"),
  use.refraction = FALSE
)

sun_azimuth(
  time = lubridate::now(),
  tz = lubridate::tz(time),
  geocode = tibble::tibble(lon = 0, lat = 51.5, address = "Greenwich"),
  use.refraction = FALSE
)

distance_to_sun(
  time = lubridate::now(),
  tz = lubridate::tz(time),
  geocode = tibble::tibble(lon = 0, lat = 51.5, address = "Greenwich"),
  use.refraction = FALSE
)
}
\arguments{
\item{time}{A "vector" of POSIXct Time, with any valid time zone (TZ) is
allowed, default is current time.}

\item{tz}{character string indicating time zone to be used in output.}

\item{geocode}{data frame with variables lon and lat as numeric values
(degrees), nrow > 1, allowed.}

\item{use.refraction}{logical Flag indicating whether to correct for
fraction in the atmosphere.}
}
\value{
A \code{data.frame} with variables \code{time} (in same TZ as input),
  \code{TZ}, \code{solartime}, \code{longitude}, \code{latitude},
  \code{address}, \code{azimuth}, \code{elevation}, \code{declination},
  \code{eq.of.time}, \code{hour.angle}, and \code{distance}. If a data frame
  with multiple rows is passed to \code{geocode} and a vector of times longer
  than one is passed to \code{time}, sun position for all combinations of
  locations and times are returned by \code{sun_angles}. Angles are expressed
  in degrees, \code{solartime} is a vector of class \code{"solar.time"},
  \code{distance} is expressed in relative sun units.
}
\description{
Function \code{sun_angles()} returns the solar angles and Sun to Earth
relative distance for given times and locations using a very precise
algorithm. Convenience functions \code{sun_azimuth()},
\code{sun_elevation()}, \code{sun_zenith_angle()} and
\code{distance_to_sun()} are wrappers on \code{sun_angles()} that return
individual vectors.
}
\details{
This function is an implementation of Meeus equations as used in
  NOAAs on-line web calculator, which are precise and valid for a very broad
  range of dates (years -1000 to 3000 at least). The apparent solar
  elevations near sunrise and sunset are affected by refraction in the
  atmosphere, which does in turn depend on weather conditions. The effect of
  refraction on the apparent position of the sun is only an estimate based on
  "typical" conditions for the atmosphere. The computation is not defined for
  latitudes 90 and -90 degrees, i.e. exactly at the poles. The function is
  vectorized and in particular passing a vector of times for a single geocode
  enhances performance very much as the equation of time, the most time
  consuming step, is computed only once.

  For improved performance, if more than one angle is needed it
  is preferable to directly call \code{sun_angles} instead of the wrapper
  functions as this avoids the unnecesary recalculation.
}
\note{
There exists a different R implementation of the same algorithms called
  "AstroCalcPureR" available as function \code{astrocalc4r} in package
  'fishmethods'. Although the equations used are almost all the same, the
  function signatures and which values are returned differ. In particular,
  the present implementation splits the calculation into two separate
  functions, one returning angles at given instants in time, and a separate
  one returning the timing of events for given dates.
}
\section{Important!}{
 Given an instant in time and a time zone, the date is
  computed from these, and may differ by one day to that at the location
  pointed by \code{geocode} at the same instant in time, unless the argument
  passed to \code{tz} matches the time zone at this location.
}

\examples{
library(lubridate)
sun_angles()
sun_azimuth()
sun_elevation()
sun_zenith_angle()
sun_angles(ymd_hms("2014-09-23 12:00:00"))
sun_angles(ymd_hms("2014-09-23 12:00:00"),
           geocode = data.frame(lat=60, lon=0))
sun_angles(ymd_hms("2014-09-23 12:00:00") + minutes((0:6) * 10))

}
\references{
The primary source for the algorithm used is the book:
Meeus, J. (1998) Astronomical Algorithms, 2 ed., Willmann-Bell, Richmond,
VA, USA. ISBN 978-0943396613.

A different implementation is available at
\url{https://apps-nefsc.fisheries.noaa.gov/AstroCalc4R/}.

An interactive web page using the same algorithms is available at
\url{https://gml.noaa.gov/grad/solcalc/}. There are small
differences in the returned times compared to our function that seem to be
related to the estimation of atmospheric refraction (about 0.1 degrees).
}
\seealso{
Other astronomy related functions: 
\code{\link{day_night}()},
\code{\link{format.solar_time}()}
}
\concept{astronomy related functions}
